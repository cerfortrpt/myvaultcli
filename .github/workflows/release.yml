name: Release Python CLI and Update Homebrew Formula

on:
  push:
    tags:
      - "v*"

      #potentially add signig in at some point
      #just can't verify lacontext localauthentication import
jobs:
  release:
    name: Build and Release
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller keyring cryptography pyobjc pyobjc-framework-LocalAuthentication
          pip install -r requirements.txt

      - name: Set version
        run: python build.py

      - name: Build binary with PyInstaller
        run: |
          pyinstaller --clean --log-level=DEBUG main.spec
          find dist/main -iname '*LocalAuthentication*' -print || echo "LocalAuthentication not bundled"
          rm vaultfingerprint
          ls
          chmod +x dist/main
          file dist/main


      # - name: Test binary for LocalAuthentication import
      #   run: |
      #     echo "Testing LocalAuthentication import in compiled binary..."
      #     ./dist/main --diagnose-local-auth || echo "Failed to import LocalAuthentication"
      #     ./dist/main diagnose-local-auth

      - name: Generate SHA256
        id: hash
        run: |
          sha256=$(shasum -a 256 dist/main | awk '{print $1}')
          echo "sha256=$sha256" >> "$GITHUB_OUTPUT"
          shasum -a 256 dist/main | awk '{print $1}' > dist/main.sha256

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/main
            dist/main.sha256
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: "Automated release for version ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Homebrew Formula
        run: |
          FORMULA_PATH="Formula/myvault.rb"
          LATEST_VERSION="${{ github.ref_name }}"
          BINARY_URL="https://github.com/${{ github.repository }}/releases/download/${LATEST_VERSION}/main"
          SHA_URL="https://github.com/${{ github.repository }}/releases/download/${LATEST_VERSION}/main.sha256"

          echo "Fetching SHA256 from: $SHA_URL"
          SHA256=$(curl -sL $SHA_URL)
          if [ -z "$SHA256" ]; then
            echo "Failed to fetch SHA256 from $SHA_URL"
            exit 1
          fi
          echo "Got SHA: $SHA256"

          git clone https://x-access-token:${{ secrets.JERRY }}@github.com/cerfortrpt/homebrew-tools taprepo
          cd taprepo

          # Patch formula
          sed -i '' "s|url \".*\"|url \"$BINARY_URL\"|" $FORMULA_PATH
          sed -i '' "s|sha256 \".*\"|sha256 \"$SHA256\"|" $FORMULA_PATH
          sed -i '' "s|version \".*\"|version \"${LATEST_VERSION}\"|" $FORMULA_PATH || echo "version \"${LATEST_VERSION}\"" >> $FORMULA_PATH

          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Update to ${LATEST_VERSION}"
          git push origin main



          